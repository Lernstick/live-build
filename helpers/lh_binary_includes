#!/bin/sh

# lh_binary_includes(1) - copy files into binary
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="copy files into binary"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Read_conffile "${LH_CONFIG}"
Set_defaults

if [ "${LH_INCLUDES}" = "none" ]
then
	exit 0
fi

Echo_message "Begin copying binary includes..."

# Requiring stage file
Require_stagefile .stage/bootstrap

# Checking stage file
Check_stagefile .stage/binary_includes

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Check user includes
if [ ! -d "${LH_INCLUDES}" ]
then
	if [ -d ../"${LH_INCLUDES}" ]
	then
		LH_INCLUDES="../${LH_INCLUDES}"
	else
		Echo_error "user specified includes not accessible in ${LH_INCLUDES}"
		exit 1
	fi
fi

# Checking local includes
if [ -d config/includes/"${LH_DISTRIBUTION}" ]
then
	LH_INCLUDES="config/includes"
fi

# Assemble architecture
case "${LH_ARCHITECTURE}" in
	amd64)
		ARCH="amd"
		;;

	i386)
		ARCH="386"
		;;

	powerpc)
		ARCH="ppc"
		;;
esac

# Working arround vfat limitations
if [ "${LH_BINARY_IMAGE}" = "usb-hdd" ]
then
	CP_OPTIONS="-L"
fi

# Copying common templates
if [ -d "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/common ] && \
ls "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/common/* > /dev/null 2>&1
then
	cp -r ${CP_OPTIONS} "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/common/* binary
fi

if [ -d "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/common."${ARCH}" ] && \
ls "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/common."${ARCH}"/* > /dev/null 2>&1
then
	cp -r ${CP_OPTIONS} "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/common."${ARCH}"/* binary
fi

# Copying live templates
if [ -d "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/live ] && \
ls "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/live/* > /dev/null 2>&1
then
	cp -r ${CP_OPTIONS} "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/live/* binary
fi

if [ -d "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/live."${ARCH}" ] && \
ls "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/live."${ARCH}"/* > /dev/null 2>&1
then
	cp -r ${CP_OPTIONS} "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/live."${ARCH}"/* binary
fi

if [ "${LH_DEBIAN_INSTALLER}" != "disabled" ]
then
	# Copying install templates
	if [ -d "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/install ] && \
	ls "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/install/* > /dev/null 2>&1
	then
		cp -r ${CP_OPTIONS} "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/install/* binary
	fi

	if [ -d "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/install."${ARCH}" ] && \
	ls "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/install."${ARCH}"/* > /dev/null 2>&1
	then
		cp -r ${CP_OPTIONS} "${LH_INCLUDES}"/"${LH_DISTRIBUTION}"/install."${ARCH}"/* binary
	fi

	# Adjusting install templates
	ARCHITECTURE="`echo ${LH_ARCHITECTURE} | sed -e 's# #/#g'`"
	DISTRIBUTION="`echo ${LH_DISTRIBUTION} | cut -b 1 | tr '[a-z]' '[A-Z]'`"
	DISTRIBUTION="${DISTRIBUTION}`echo ${LH_DISTRIBUTION} | cut -b 2-`"
	eval VERSION="$`echo VERSION_${LH_DISTRIBUTION}`"

	if [ -d binary/pool/main/l/live-installer ]
	then
		TYPE="LIVE/INSTALL"
	fi

	TYPE="LIVE/NETINST"

	DEBIAN_NAME="Debian GNU/Linux ${VERSION} \"${DISTRIBUTION}\" - Official ${ARCHITECTURE} ${TYPE} Binary `date +%Y%m%d-%H:%M`"
	DEBIAN_DATE="`date +%Y%m%d-%H:%M`"

	if [ "${LH_ARCHITECTURE}" = "i386" ]
	then
		DEBIAN_TOOLS_HTML=" <P>\n <tt>&nbsp;\n <A href="tools/">/tools/</a>\n </tt>\n\n and\n <tt>&nbsp;\n <A href="install/floppy/">/install/floppy/</a>\n </tt>"
		DEBIAN_TOOLS_TXT="/tools/ and   /install/floppy/"
	else
		DEBIAN_TOOLS_HTML=" <P>\n <tt>&nbsp;\n <A href="tools/">/tools/</a>\n </tt>\n\n\n\n\n\n"
		DEBIAN_TOOLS_TXT="/tools/"
	fi

	sed -i -e "s#DEBIAN_NAME#${DEBIAN_NAME}#g" -e "s/DEBIAN_DATE/${DEBIAN_DATE}/g" -e "s#DEBIAN_TOOLS#${DEBIAN_TOOLS_HTML}#g" binary/README.html
	sed -i -e "s#DEBIAN_NAME#${DEBIAN_NAME}#g" -e "s/DEBIAN_DATE/${DEBIAN_DATE}/g" -e "s#DEBIAN_TOOLS#${DEBIAN_TOOLS_TXT}#g" binary/README.txt
fi

# Creating stage file
Create_stagefile .stage/binary_includes
