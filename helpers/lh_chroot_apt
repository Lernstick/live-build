#!/bin/sh

# lh_chroot_apt(1) - manage /etc/apt/apt.conf
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="manage /etc/apt/apt.conf"
HELP=""
USAGE="${PROGRAM} {install|remove} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Set_defaults

# Requiring stage file
Require_stagefile .stage/bootstrap

case "${1}" in
	install)
		Echo_message "Configuring file /etc/apt/apt.conf"

		# Checking stage file
		Check_stagefile .stage/chroot_apt

		# Checking lock file
		Check_lockfile .lock

		# Creating lock file
		Create_lockfile .lock

		mkdir -p chroot/etc/apt/apt.conf.d

		# Configuring apt ftp proxy
		if [ -n "${LH_APT_FTPPROXY}" ]
		then
			echo "Acquire::ftp::Proxy \"${LH_APT_FTPPROXY}\";" > chroot/etc/apt/apt.conf.d/00ftp-proxy
		fi

		# Configuring apt http proxy
		if [ -n "${LH_APT_HTTPPROXY}" ]
		then
			echo "Acquire::http::Proxy \"${LH_APT_HTTPPROXY}\";" > chroot/etc/apt/apt.conf.d/00http-proxy
		fi

		# Configuring apt pdiffs
		case "${LH_APT_PDIFFS}" in
			enabled)
				echo "Acquire::PDiffs \"true\";" > chroot/etc/apt/apt.conf.d/00pdiffs
				;;

			disabled)
				echo "Acquire::PDiffs \"false\";" > chroot/etc/apt/apt.conf.d/00pdiffs
				;;
		esac

		# Configuring apt pipeline
		if [ -n "${LH_APT_PIPELINE}" ]
		then
			echo "Acquire::http::Pipeline-Depth \"${LH_APT_PIPELINE}\";" > chroot/etc/apt/apt.conf.d/00pipeline
		fi

		# Configuring apt recommends
		if [ "${LH_APT}" = "aptitude" ]
		then
			case "${LH_APT_RECOMMENDS}" in
				enabled)
					echo "Aptitude::Recommends-Important \"true\";" > chroot/etc/apt/apt.conf.d/00recommends
					;;

				disabled)
					echo "Aptitude::Recommends-Important \"false\";" > chroot/etc/apt/apt.conf.d/00recommends
					;;
			esac
		fi

		# Configuring apt secure
		case "${LH_APT_SECURE}" in
			enabled)
				echo "APT::Get::AllowUnauthenticated \"true\";" > chroot/etc/apt/apt.conf.d/00secure
				echo "Aptitude::CmdLine::Ignore-Trust-Violations \"false\";" >> chroot/etc/apt/apt.conf.d/00secure
				;;

			disabled)
				echo "APT::Get::AllowUnauthenticated \"false\";" > chroot/etc/apt/apt.conf.d/00secure
				echo "Aptitude::CmdLine::Ignore-Trust-Violations \"true\";" >> chroot/etc/apt/apt.conf.d/00secure
				;;
		esac

		# Creating stage file
		Create_stagefile .stage/chroot_apt
		;;

	remove)
		Echo_message "Deconfiguring file /etc/apt/apt.conf"

		# Checking lock file
		Check_lockfile .lock

		# Creating lock file
		Create_lockfile .lock

		# Deconfiguring aptitude ftp proxy
		rm -f chroot/etc/apt/apt.conf.d/00ftp-proxy

		# Deconfiguring aptitude http proxy
		rm -f chroot/etc/apt/apt.conf.d/00http-proxy

		# Deconfiguring aptitude pdiffs
		rm -f chroot/etc/apt/apt.conf.d/00pdiffs

		# Deconfiguring aptitude pipeline
		rm -f chroot/etc/apt/apt.conf.d/00pipeline

		# Deconfiguring aptitude recommends
		rm -f chroot/etc/apt/apt.conf.d/00recommends

		# Deconfiguring aptitude secure
		rm -f chroot/etc/apt/apt.conf.d/00secure

		# Removing stage file
		rm -f .stage/chroot_apt
		;;

	*)
		Usage
		;;
esac
