#!/bin/sh

# lh_binary_memtest86(1) - installs memtest86+ into binary
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Source common functions
for FUNCTION in /usr/share/live-helper/functions/*.sh
do
	. ${FUNCTION}
done

# Set static variables
DESCRIPTION="installs memtest86+ into binary"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/image
Set_defaults

# Requiring stage file
Require_stagefile .stage/bootstrap

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Checking stage file
Check_stagefile .stage/binary_memtest86

if [ "${LIVE_ARCHITECTURE}" != "amd64" ] && [ "${LIVE_ARCHITECTURE}" != "i386" ]
then
	echo "W: skipping binary_memtest86, foreign architecture."
	exit 0
fi

if [ "${LIVE_MEMTEST86}" = "enabled" ]
then
	if [ ! -f chroot/boot/memtest86+.bin ]
	then
		PACKAGES="${PACKAGES} memtest86+"
	fi

	if [ -n "${PACKAGES}" ]
	then
		# Installing symlinks
		case "${LH_APT}" in
			apt|apt-get)
				Chroot "apt-get install --yes ${PACKAGES}"
				;;

			aptitude)
				Chroot "aptitude install --assume-yes ${PACKAGES}"
				;;
		esac
	fi

	# Setting destination directory
	case "${LIVE_BINARY_IMAGE}" in
		iso)
			DESTDIR="binary/live"
			;;

		net)
			DESTDIR="tftpboot"
			;;

		usb|hdd)
			DESTDIR="binary"
			;;
	esac

	# Temporary check for broken syslinux
	if [ "${LIVE_BINARY_IMAGE}" = "iso" ]
	then
		case "${LIVE_ARCHITECTURE}" in
			i386)
				DESTDIR="${DESTDIR}.386"
				;;
		esac
	fi

	# Creating directory
	if [ ! -d "${DESTDIR}" ]
	then
		mkdir -p "${DESTDIR}"
	fi

	# Installing memtest86+
	cp chroot/boot/memtest86+.bin "${DESTDIR}"/memtest

	if [ -n "${PACKAGES}" ]
	then
		# Removing packages
		case "${LH_APT}" in
			apt|apt-get)
				Chroot "apt-get remove --purge --yes ${PACKAGES}"
				;;

			aptitude)
				Chroot "aptitude purge --assume-yes ${PACKAGES}"
				;;
		esac
	fi

	# Creating stage file
	Create_stagefile .stage/binary_memtest86
fi
