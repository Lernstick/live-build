#!/bin/sh

# lh_bootstrap_cdebootstrap(1) - bootstrap a Debian system with cdebootstrap(1)
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="bootstrap a Debian system with cdebootstrap(1)"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Read_conffile "${LH_CONFIG}"
Set_defaults

if [ "${LH_BOOTSTRAP}" != "cdebootstrap" ]
then
	exit 0
fi

# Check architecture
Check_crossarchitecture

Echo_message "Begin bootstrapping system..."

Check_package /usr/bin/cdebootstrap cdebootstrap

# Ensure that a system is built as root
lh_testroot

# Checking stage file
Check_stagefile .stage/bootstrap
Check_stagefile .stage/bootstrap_cache.restore

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Creating chroot directory
mkdir -p chroot

# Setting cdebootstrap options
if [ -n "${LH_ARCHITECTURE}" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --arch=${LH_ARCHITECTURE}"
fi

if [ -n "${LH_BOOTSTRAP_CONFIG}" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --suite-config=${LH_BOOTSTRAP_CONFIG}"
fi

if [ -n "${LH_BOOTSTRAP_INCLUDE}" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --include=${LH_BOOTSTRAP_INCLUDE}"
fi

if [ -n "${LH_BOOTSTRAP_EXCLUDE}" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --exclude=${LH_BOOTSTRAP_EXCLUDE}"
fi

if [ -n "${LH_BOOTSTRAP_KEYRING}" ]
then
    CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --keyring=${LH_BOOTSTRAP_KEYRING}"
fi

if [ -z "${LH_BOOTSTRAP_FLAVOUR}" ]
then
	case "${LH_PACKAGES_LISTS}" in
		minimal|mini)
			CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --flavour=minimal"
			;;
		*)
			CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --flavour=standard"
			;;
	esac
else
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --flavour=${LH_BOOTSTRAP_FLAVOUR}"
fi

if [ "${LH_DEBUG}" = "enabled" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --debug"
fi

if [ "${LH_QUIET}" = "enabled" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --quiet"
fi

if [ "${LH_VERBOSE}" = "enabled" ]
then
	CDEBOOTSTRAP_OPTIONS="${CDEBOOTSTRAP_OPTIONS} --verbose"
fi

if [ -x "/usr/bin/cdebootstrap" ]
then
	if [ "${LH_CACHE_PACKAGES}" = "enabled" ]
	then
		if [ -d cache/packages_bootstrap ]
		then
			mkdir -p chroot/var/cache/bootstrap
			cp cache/packages_bootstrap/*.deb chroot/var/cache/bootstrap
		fi

		# Executing cdebootstrap (download-only)
		${LH_ROOT_COMMAND} cdebootstrap ${CDEBOOTSTRAP_OPTIONS} --download-only "${LH_DISTRIBUTION}" chroot "${LH_MIRROR_BOOTSTRAP}"

		if [ -n "${LH_ROOT_COMMAND}" ]
		then
			${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot
		fi

		# Removing old cache
		if [ -d cache/packages_bootstrap ]
		then
			rm -f cache/packages_bootstrap/*.deb
		fi

		# Saving new cache
		mkdir -p cache/packages_bootstrap

		cp chroot/var/cache/bootstrap/*.deb cache/packages_bootstrap
	fi

	# Executing cdebootstrap (regular run)
	[ "$LH_QUIET" = "enabled" ] && echo -n "Running cdebootstrap ... "
	${LH_ROOT_COMMAND} cdebootstrap ${CDEBOOTSTRAP_OPTIONS} "${LH_DISTRIBUTION}" chroot "${LH_MIRROR_BOOTSTRAP}"
	[ "$LH_QUIET" = "enabled" ] && echo "done."

	if [ -n "${LH_ROOT_COMMAND}" ]
	then
		${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot
	fi

	# Remove cdebootstrap-helper-diverts (needed at least for minimal flavours)
	case "${LH_PACKAGES_LISTS}" in
		minimal|mini)
			Chroot "dpkg -P cdebootstrap-helper-diverts"
			;;
	esac

	# Deconfiguring cdebootstrap configurations
	rm -f chroot/etc/apt/sources.list
	rm -f chroot/etc/hosts
	rm -f chroot/etc/resolv.conf

	# Removing bootstrap cache
	rm -rf chroot/var/cache/bootstrap

	# Creating stage file
	Create_stagefile .stage/bootstrap
else
	Echo_error "Can't process file /usr/bin/cdebootstrap (FIXME)"
	exit 1
fi
