#!/bin/sh

# lh_chroot_hacks(1) - execute hacks in chroot
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="execute hacks in chroot"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Set_defaults

Echo_message "Begin executing hacks..."

# Requiring stage file
Require_stagefile .stage/bootstrap

# Checking stage file
Check_stagefile .stage/chroot_hacks

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Removing udev mac caching rule
Chroot "rm -f /etc/udev/rules.d/z25_persistent-net.rules"

case "${LIVE_BINARY_IMAGES}" in
	net)
		if [ ! -f chroot/usr/bin/smbmount ]
		then
			case "${LH_APT}" in
				apt|apt-get)
					Chroot "apt-get install --yes smbfs"
					;;

				aptitude)
					Chroot "aptitude install --assume-yes smbfs"
					;;
			esac
		fi

		if [ ! -d chroot/etc/initramfs-tools ]
		then
			mkdir chroot/etc/initramfs-tools
		fi
		if [ ! "`grep 'MODULES=netboot' chroot/etc/initramfs-tools/initramfs.conf`" ]
		then
			# Configuring initramfs for NFS
cat >> chroot/etc/initramfs-tools/initramfs.conf << EOF
MODULES=netboot
BOOT=nfs
NFSROOT=auto
EOF
		fi
		;;
esac

# Update initramfs
Chroot "update-initramfs -k all -t -u"

# Remove build systems clock drift
echo "0.0 0 0.0" > chroot/etc/adjtime

# Remove generated xorg.conf based on build systems configuration
rm -f chroot/etc/X11/xorg.conf

# Remove cruft
rm -f chroot/boot/initrd*bak*
rm -f /etc/apt/trusted.gpg~
rm -f chroot/etc/group- chroot/etc/passwd-
rm -f chroot/etc/gshadow- chroot/etc/shadow-
rm -f chroot/var/cache/debconf/*-old
rm -f chroot/var/lib/dpkg/*-old

if [ -n "${LH_ROOT_COMMAND}" ]
then
	${LH_ROOT_COMMAND} chown -R --quiet `whoami`:`whoami` chroot
fi

if [ -d chroot/home/${LIVE_USERNAME} ]
then
	chown -R --quiet 999:999 chroot/home/${LIVE_USERNAME}
fi

# Creating stage file
Create_stagefile .stage/chroot_hacks
