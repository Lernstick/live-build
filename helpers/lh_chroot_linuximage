#!/bin/sh

# lh_chroot_linuximage(1) - manage /etc/kernel-img.conf
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Source common functions
for FUNCTION in /usr/share/live-helper/functions/*.sh
do
	. ${FUNCTION}
done

# Set static variables
DESCRIPTION="manage /etc/kernel-img.conf"
HELP=""
USAGE="${PROGRAM} {install|remove} [--force]"

Arguments "${@}"

Echo_debug "Init ${PROGRAM}"

# Reading configuration files
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/common
Read_conffile config/image
Set_defaults

Breakpoint "chroot_linuximage: Init"

# Requiring stage file
Require_stagefile .stage/bootstrap

case "${1}" in
	install)
		# Checking stage file
		Check_stagefile .stage/chroot_linuximage

		# Checking lock file
		Check_lockfile .lock

		# Creating lock file
		Create_lockfile .lock

		if [ -f chroot/etc/kernel-img.conf ]
		then
			# Saving kernel-img.conf
			cp chroot/etc/kernel-img.conf chroot/etc/kernel-img.conf.old
		fi

		# Configuring kernel-img.conf
cat >> chroot/etc/kernel-img.conf << EOF
do_bootloader = No
do_initrd = Yes
warn_initrd = No
EOF

		if [ "${LIVE_KERNEL_PACKAGES}" != "none" ]
		then
			for FLAVOUR in ${LIVE_KERNEL_FLAVOUR}
			do
				for PACKAGE in ${LIVE_KERNEL_PACKAGES}
				do
					PACKAGES="${PACKAGES} ${PACKAGE}-${FLAVOUR}"
				done
			done
		fi

		PACKAGES="${PACKAGES} casper"

		# Installing linux-image, modules and casper
		case "${LH_APT}" in
			apt|apt-get)
				Chroot "apt-get install --yes ${PACKAGES}"
				;;

			aptitude)
				Chroot "aptitude install --assume-yes ${PACKAGES}"
				;;
		esac

		# Creating stage file
		Create_stagefile .stage/chroot_linuximage
		;;

	remove)
		# Checking lock file
		Check_lockfile .lock

		# Creating lock file
		Create_lockfile .lock

		if [ -f chroot/etc/kernel-img.conf.old ]
		then
			# Restoring kernel-img.conf file
			mv chroot/etc/kernel-img.conf.old chroot/etc/kernel-img.conf
		else
			# Removing kernel-img.conf file
			rm -f chroot/etc/kernel-img.conf
		fi

		# Removing stage file
		rm -f .stage/chroot_linuximage
		;;

	*)
		Usage
		;;
esac
