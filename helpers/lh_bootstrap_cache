#!/bin/sh

# lh_bootstrap_cache(1) - cach bootstrap stage
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="cache bootstrap stage"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Read_conffile "${LH_CONFIG}"
Set_defaults

Echo_message "Begin caching bootstrap stage..."

for STAGE in ${LH_CACHE_STAGES}
do
	case "${1}" in
		restore)
			# Checking stage file
			Check_stagefile .stage/bootstrap_cache.restore

			# Checking lock file
			Check_lockfile .lock

			# Creating lock file
			Create_lockfile .lock

			if [ "${STAGE}" = "bootstrap" ] && [ -d cache/stages_bootstrap ]
			then
				# Removing old chroot
				rm -rf chroot

				# Restoring old cache
				${LH_ROOT_COMMAND} cp -a cache/stages_bootstrap chroot

				if [ -n "${LH_ROOT_COMMAND}" ]
				then
					${LH_ROOT_COMMAND} chown -R `whoami`:`whoami` chroot
				fi

				# Creating stage file
				Create_stagefile .stage/bootstrap_cache.restore

				exit 0
			fi
			;;

		save)
			# Checking stage file
			Check_stagefile .stage/bootstrap_cache.save

			# Checking lock file
			Check_lockfile .lock

			# Creating lock file
			Create_lockfile .lock

			if [ "${STAGE}" = "bootstrap" ]
			then
				rm -rf cache/stages_bootstrap

				mkdir -p cache

				${LH_ROOT_COMMAND} cp -a chroot cache/stages_bootstrap

				if [ -n "${LH_ROOT_COMMAND}" ]
				then
					${LH_ROOT_COMMAND} chown -R `whoami`:`whoami` cache/stages_bootstrap
				fi
			fi
			;;
	esac
done
