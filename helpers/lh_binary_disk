#!/bin/sh

# lh_binary_disk (1) - install disk information into binary
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="install disk information into binary"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Read_conffile "${LH_CONFIG}"
Set_defaults

if [ "${LH_BINARY_IMAGES}" != "iso" ]
then
	exit 0
fi

Echo_message "Begin installing disk information..."

# Requiring stage file
Require_stagefile .stage/bootstrap

# Checking stage file
Check_stagefile .stage/binary_disk

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

mkdir -p binary/.disk

ARCHITECTURE="$(echo ${LH_ARCHITECTURE} | sed -e 's# #/#g')"
DISTRIBUTION="$(echo ${LH_DISTRIBUTION} | cut -b 1 | tr '[a-z]' '[A-Z]')"
DISTRIBUTION="${DISTRIBUTION}$(echo ${LH_DISTRIBUTION} | cut -b 2-)"
eval VERSION="$`echo VERSION_${LH_DISTRIBUTION}`"

if [ "${LH_DISTRIBUTION}" != "etch" ]
then
	ARCHITECTURE="Snapshot ${ARCHITECTURE}"
fi

case "${LH_MODE}" in
	debian)
		case "${LH_DEBIAN_INSTALLER}" in
			cdrom)
				echo "main" > binary/.disk/base_components

				touch binary/.disk/base_installable

				echo "full_cd" > binary/.disk/cd_type

				echo "Debian GNU/Linux ${VERSION} \"${DISTRIBUTION}\" - Official ${ARCHITECTURE} CD Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info

				cp "${LH_BASE}"/data/debian-cd/${LH_DISTRIBUTION}/${LH_ARCHITECTURE}_udeb_include binary/.disk/udeb_include
				;;

			enabled|netinst|live)
				echo "main" > binary/.disk/base_components

				touch binary/.disk/base_installable

				echo "not_complete" > binary/.disk/cd_type

				echo "Debian GNU/Linux ${VERSION} \"${DISTRIBUTION}\" - Official ${ARCHITECTURE} NETINST Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info

				cp "${LH_BASE}"/data/debian-cd/${LH_DISTRIBUTION}/${LH_ARCHITECTURE}_netinst_udeb_include binary/.disk/udeb_include

				if [ "${LH_DEBIAN_INSTALLER}" = "live" ]
				then
					echo "live-installer" >> binary/.disk/udeb_include
				fi
				;;

			businesscard)
				echo "main" > binary/.disk/base_components

				echo "not_complete" > binary/.disk/cd_type

				echo "Debian GNU/Linux ${VERSION} \"${DISTRIBUTION}\" - Official ${ARCHITECTURE} BC Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info

				cp "${LH_BASE}"/data/debian-cd/${LH_DISTRIBUTION}/${LH_ARCHITECTURE}_businesscard_udeb_include binary/.disk/udeb_include
				;;

			disabled)
				echo "Debian GNU/Linux ${VERSION} \"${DISTRIBUTION}\" - Official ${ARCHITECTURE} LIVE Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info
				;;
		esac
		;;

	ubuntu)
		# FIXME
		echo "Ubuntu Linux ${VERSION} \"${DISTRIBUTION}\" - Unofficial ${ARCHITECTURE} LIVE/NETINST Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info
		# Ubuntu 7.04 "Feisty Fawn" - Release i386 (20070418)
		;;
esac

# Creating stage file
Create_stagefile .stage/binary_disk
