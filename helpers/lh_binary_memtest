#!/bin/sh

# lh_binary_memtest(1) - installs a memtest into binary
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="installs a memtest into binary"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Set_defaults

if [ "${LIVE_MEMTEST}" = "disabled" ]
then
	exit 0
fi

Echo_message "Begin installing memtest..."

# Requiring stage file
Require_stagefile .stage/bootstrap

# Checking stage file
Check_stagefile .stage/binary_memtest

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

if [ "${LIVE_ARCHITECTURE}" != "amd64" ] && [ "${LIVE_ARCHITECTURE}" != "i386" ]
then
	Echo_warning "skipping binary_memtest, foreign architecture."
	exit 0
fi

# Checking depends
case "${LIVE_MEMTEST}" in
	memtest86)
		Check_package chroot/boot/memtest86.bin memtest86
		;;

	memtest86+)
		Check_package chroot/boot/memtest86+.bin memtest86+
		;;
esac

# Installing depends
Install_package

# Setting destination directory
case "${LIVE_BINARY_IMAGES}" in
	iso)
		case "${LH_INITRAMFS}" in
			casper)
				DESTDIR="binary/casper"
				;;

			live-initramfs)
				DESTDIR="binary/live"
				;;
		esac
		;;

	net)
		DESTDIR="tftpboot"
		;;

	tar|usb-hdd)
		case "${LH_INITRAMFS}" in
			casper)
				DESTDIR="binary/casper"
				;;

			live-initramfs)
				DESTDIR="binary/live"
				;;
		esac

		# Workaround for syslinux (<< 3.36) which doesn't support long file/path names
		if [ "${LIVE_DISTRIBUTION}" = "etch" ] && [ "${LIVE_BOOTLOADER}" = "syslinux" ]
		then
			DESTDIR="binary"
		fi
		;;
esac

Check_multiarchitecture

# Creating directory
mkdir -p "${DESTDIR}"

# Installing memtest
case "${LIVE_MEMTEST}" in
	memtest86)
		cp -f chroot/boot/memtest86.bin "${DESTDIR}"/memtest
		;;

	memtest86+)
		cp -f chroot/boot/memtest86+.bin "${DESTDIR}"/memtest
		;;
esac

# Removing depends
Remove_package

# Creating stage file
Create_stagefile .stage/binary_memtest
