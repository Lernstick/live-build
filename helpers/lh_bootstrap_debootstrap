#!/bin/sh

# lh_bootstrap_debootstrap(1) - bootstrap a Debian system with debootstrap(8)

set -e

# Source common functions
for FUNCTION in /usr/share/live-helper/functions/*.sh
do
	. ${FUNCTION}
done

# Ensure that a system is built as root
lh_testroot

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Set_defaults

# Checking stage file
Check_stagefile .stage/bootstrap

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Creating chroot directory
if [ ! -d chroot ]
then
	mkdir -p chroot
fi

# Setting debootstrap options
if [ -n "${LIVE_ARCHITECTURE}" ]
then
	DEBOOTSTRAP_OPTIONS="${DEBOOTSTRAP_OPTIONS} --arch ${LIVE_ARCHITECTURE}"
fi

if [ -n "${LIVE_BOOTSTRAP_CONFIG}" ]
then
	LIVE_DEBOOTSTRAP_SCRIPT="/usr/lib/debootstrap/scripts/${LIVE_BOOTSTRAP_CONFIG}"
fi

if [ -x "/usr/sbin/debootstrap" ]
then
	# Restore old cache
	if [ -d cache/bootstrap ]
	then
		mkdir -p chroot/var/cache/apt/archives
		cp cache/bootstrap/*.deb chroot/var/cache/apt/archives
	fi

	if [ "${LH_CACHE}" = "enabled" ]
	then
		# Executing debootstrap (download-only)
		debootstrap ${DEBOOTSTRAP_OPTIONS} --download-only "${LIVE_DISTRIBUTION}" chroot "${LIVE_MIRROR_LOCAL}" "${LIVE_DEBOOTSTRAP_SCRIPT}"

		# Removing old cache
		if [ -d cache/bootstrap ]
		then
			rm -f cache/bootstrap/*.deb
		fi

		# Saving new cache
		if [ ! -d cache/bootstrap ]
		then
			mkdir -p cache/bootstrap
		fi

		cp chroot/var/cache/apt/archives/*.deb cache/bootstrap
	fi

	# Executing debootstrap (regular run)
	debootstrap ${DEBOOTSTRAP_OPTIONS} "${LIVE_DISTRIBUTION}" chroot "${LIVE_MIRROR_LOCAL}" "${LIVE_DEBOOTSTRAP_SCRIPT}"
else
	echo "E: Can't process file /usr/bin/debootstrap (FIXME)"
	exit 1
fi

# Removing bootstrap cache
rm -rf chroot/var/cache/apt/archives/*.deb

# Creating stage file
Create_stagefile .stage/bootstrap
