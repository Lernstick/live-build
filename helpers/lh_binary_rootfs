#!/bin/sh

# lh_binary_rootfs(1) - build rootfs image
# Copyright (C) 2006-2007 Daniel Baumann <daniel@debian.org>
#
# live-helper comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.

set -e

# Including common functions
LH_BASE="${LH_BASE:-/usr/share/live-helper}"

for FUNCTION in "${LH_BASE}"/functions/*.sh
do
	. "${FUNCTION}"
done

# Setting static variables
DESCRIPTION="build rootfs image"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffile config/common
Read_conffile config/bootstrap
Read_conffile config/chroot
Read_conffile config/binary
Read_conffile config/source
Set_defaults

Echo_message "Begin building root filesystem image..."

# Requiring stage file
Require_stagefile .stage/bootstrap
Require_stagefile .stage/binary_chroot

# Checking stage file
Check_stagefile .stage/binary_rootfs

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

case "${LIVE_ARCHITECTURE}" in
	amd64|i386)
		LINUX="vmlinuz"
		;;

	powerpc)
		LINUX="vmlinux"
		;;
esac

case "${LH_INITRAMFS}" in
	casper)
		INITFS="casper"
		;;

	live-initramfs)
		INITFS="live"
		;;
esac

# Creating directory
mkdir -p binary/${INITFS}

for STAGE in ${LH_CACHE_STAGES}
do
	if [ "${STAGE}" = "rootfs" ] && [ -d cache/stages_rootfs ]
	then
		# Removing old chroot
		rm -rf binary/"${INITFS}"/filesystem.*

		# Restoring old cache
		mkdir -p binary/"${INITFS}"
		${LH_ROOT_COMMAND} cp -al cache/stages_rootfs/filesystem.* binary/"${INITFS}"

		if [ -n "${LH_ROOT_COMMAND}" ]
		then
			${LH_ROOT_COMMAND} chown -R `whoami`:`whoami` binary
		fi

		# Creating stage file
		Create_stagefile .stage/binary_rootfs
		exit 0
	fi
done

case "${LIVE_CHROOT_FILESYSTEM}" in
	ext2)
		# Checking depends
		Check_package chroot/usr/bin/genext2fs genext2fs

		# Installing depends
		Install_package

		# Remove old ext2 image
		if [ -f binary/${INITFS}/filesystem.ext2 ]
		then
			rm -f binary/${INITFS}/filesystem.ext2
		fi

		DU_DIM="`du -ks chroot/chroot | cut -f1`"
		REAL_DIM="`expr ${DU_DIM} + ${DU_DIM} / 20`" # Just 5% more to be sure, need something more sophistcated here...

		Chroot "genext2fs --size-in-blocks=${REAL_DIM} --reserved-blocks=0 --root=chroot filesystem.ext2"

		# Move image
		mv chroot/filesystem.ext2 binary/${INITFS}
		rm -rf chroot/chroot

		# Removing depends
		Remove_package
		;;

	plain)
		if [ -d binary/${INITFS}/filesystem.dir ]
		then
			rm -rf binary/${INITFS}/filesystem.dir
		fi

		mv chroot/chroot binary/${INITFS}/filesystem.dir
		;;

	squashfs)
		# Checking depends
		Check_package chroot/usr/sbin/mksquashfs squashfs-tools

		# Installing depends
		Install_package

		# Remove old squashfs image
		if [ -f binary/${INITFS}/filesystem.squashfs ]
		then
			rm -f binary/${INITFS}/filesystem.squashfs
		fi

		if [ "${LH_QUIET}" = "enabled" ] && [ "${LIVE_DISTRIBUTION}" != "etch" ] && [ "${LIVE_DISTRIBUTION}" != "testing" ]
		then
			MKSQUASHFS_OPTIONS="${MKSQUASHFS_OPTIONS} -no-progress"
		fi

		if [ "${LH_VERBOSE}" = "enabled" ]
		then
			MKSQUASHFS_OPTIONS="${MKSQUASHFS_OPTIONS} -info"
		fi

		if [ "${LIVE_PACKAGES_LISTS}" != "minimal" ] && [ "${LIVE_PACKAGES_LISTS}" != "mini" ]
		then
			MKSQUASHFS_OPTIONS="${MKSQUASHFS_OPTIONS} -e chroot/boot/${LINUX}* chroot/boot/initrd.img* chroot/${LINUX}* chroot/initrd.img*"
		fi

		if [ -f config/binary_rootfs/squashfs.sort ]
		then
			MKSQUASHFS_OPTIONS="${MKSQUASHFS_OPTIONS} -sort squashfs.sort"
			cp config/binary_rootfs/squashfs.sort chroot
		fi

		# Create image
		Chroot "mksquashfs chroot filesystem.squashfs ${MKSQUASHFS_OPTIONS}"

		# Move image
		${LH_ROOT_COMMAND} mv chroot/filesystem.squashfs binary/${INITFS}
		${LH_ROOT_COMMAND} rm -rf chroot/chroot chroot/squashfs.sort

		if [ -n "${LH_ROOT_COMMAND}" ]
		then
			${LH_ROOT_COMMAND} chown -R `whoami`:`whoami` binary/${INITFS}
		fi

		# Removing depends
		Remove_package
		;;
esac

for STAGE in ${LH_CACHE_STAGES}
do
	if [ "${STAGE}" = "rootfs" ]
	then
		rm -rf cache/stages_rootfs

		mkdir -p cache/stages_rootfs

		${LH_ROOT_COMMAND} cp -al binary/"${INITFS}"/filesystem.* cache/stages_rootfs

		if [ -n "${LH_ROOT_COMMAND}" ]
		then
			${LH_ROOT_COMMAND} chown -R `whoami`:`whoami` cache/stages_rootfs
		fi
	fi
done

# Creating stage file
Create_stagefile .stage/binary_rootfs
