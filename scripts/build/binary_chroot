#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2006-2010 Daniel Baumann <daniel@debian.org>
##
## live-build comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
. "${LH_BASE:-/usr/share/live/build}"/scripts/build.sh

# Setting static variables
DESCRIPTION="$(Echo 'copy chroot into chroot')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

Echo_message "Begin copying chroot..."

# Requiring stage file
Require_stagefile .stage/config .stage/bootstrap

# Checking stage file
Check_stagefile .stage/binary_chroot

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Normally, virtual filesystems are not mounted here, but people tend to be lazy
if [ -f chroot/proc/version ]
then
	if [ "${LH_USE_FAKEROOT}" != "true" ]
then
		${LH_ROOT_COMMAND} umount chroot/proc
	else
		rm -rf chroot/proc
		mkdir -p chroot/proc
	fi
fi

if [ -d chroot/sys/kernel ]
then
	if [ "${LH_USE_FAKEROOT}" != "true" ]
	then
		${LH_ROOT_COMMAND} umount chroot/sys
	else
		rm -rf chroot/sys
		mkdir -p chroot/sys
	fi
fi

# Copying /dev if using fakeroot
if [ "${LH_USE_FAKEROOT}" = "true" ]
then
	rm -rf chroot/dev
	find /dev | cpio -dmpu chroot
fi

if [ "${LH_BUILD_WITH_CHROOT}" = "false" ]
then
	exit 0
fi

if [ "${LH_CACHE}" = "true" ] && Find_files cache/stages_rootfs/filesystem*
then
	exit 0
fi

Echo_message "This may take a while."

# Removing old chroot
${LH_ROOT_COMMAND} rm -rf chroot/chroot
${LH_ROOT_COMMAND} rm -rf chroot.tmp

# Copying new chroot
if [ -d cache/stages_bootstrap ] && [ "${LH_CHROOT_FILESYSTEM}" != "plain" ]
then
	${LH_ROOT_COMMAND} mv chroot chroot.tmp
	${LH_ROOT_COMMAND} cp -a cache/stages_bootstrap chroot
	${LH_ROOT_COMMAND} touch chroot/chroot.cache
else
	${LH_ROOT_COMMAND} cp -a chroot chroot.tmp
fi

${LH_ROOT_COMMAND} mv chroot.tmp chroot/chroot

# Handling chroot excludes
if [ -f config/binary_rootfs/excludes ]
then
	case "${LH_BUILD_WITH_CHROOT}" in
		true)
			cp config/binary_rootfs/excludes chroot/chroot/excludes
			chroot chroot/chroot /usr/bin/env -i xargs --arg-file=/excludes -I FILE bash -c 'rm -rf FILE'
			rm -f chroot/chroot/excludes
			;;

		false)
			cp config/binary_rootfs/excludes chroot/excludes
			chroot chroot /usr/bin/env -i xargs --arg-file=/excludes -I FILE bash -c 'rm -rf FILE'
			rm -f chroot/excludes
			;;
	esac
fi

if [ -n "${LH_ROOT_COMMAND}" ]
then
	${LH_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot
fi

# Creating stage file
Create_stagefile .stage/binary_chroot
