.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LIVE\-HELPER 7 18.06.2010 2.0~a15 "Debian Live Projekt"

.SH NAME
\fBlive\-helper\fP \- die Debian Live Tool Suite

.SH ÃœBERSICHT
.\" FIXME
.\" FIXME
\fBlh \fP\fIBEFEHL\fP [\fB\-h|\-\-help\fP] [\fB\-u|\-\-usage\fP] [\fB\-v|\-\-version\fP]
[\fB\-\-breakpoints\fP] [\fB\-\-conffile\fP] [\fB\-\-debug\fP] [\fB\-\-force\fP] [\fB\-\-quiet\fP]
[\fB\-\-verbose\fP]

.SH BESCHREIBUNG
.\" FIXME
live\-helper is a set of scripts to build Debian Live system images. The idea
behind live\-helper is a tool suite that uses a configuration directory to
completely automate and customize all aspects of building a Live image.
.PP
The \fICOMMAND\fP is a name of a live\-helper command (see below).
.PP
.\" FIXME
More documentation about how to use live\-helper is available in the
individual manpages for each helper and in the manual at
<\fIhttp://live.debian.net/manual/\fP>.

.SH OPTIONEN
.\" FIXME
.SS "Shared live\-helper options"
The following command line options are supported by all live\-helper
programs.
.IP "\fB\-h, \-\-help\fP" 4
display help and exit.
.IP "\fB\-u, \-\-usage\fP" 4
show usage and exit.
.IP "\fB\-v, \-\-version\fP" 4
output version information and exit.
.SS "Common live\-helper options"
The following command line options are supported by most live\-helper
programs. See the man page of each program for a complete explanation of
what each option does.
.IP \fB\-\-breakpoints\fP 4
run with breakpoints.
.IP \fB\-\-conffile\fP 4
use custom configuration file.
.IP \fB\-\-debug\fP 4
show debug information.
.IP \fB\-\-force\fP 4
force helper execution, even if stage file exists.
.IP \fB\-\-quiet\fP 4
be quiet.
.IP \fB\-\-verbose\fP 4
.\" FIXME
be verbose.

.SH "LIVE\-HELPER COMMANDS"
.\" FIXME
We divide live\-helper into high level ("porcelain") commands and low level
("plumbing") commands.
.PP
.\" FIXME
Here is the complete list of all available live\-helper commands. See their
man pages for additional documentation.

.SH "HIGH\-LEVEL COMMANDS (PORCELAIN)"
.\" FIXME
We separate the porcelain commands into the main commands and some ancillary
user utilities.
.SS "Main porcelain commands"
.IP \fBlh_config\fP(1) 4
create configuration for live\-helper
.IP \fBlh_bootstrap\fP(1) 4
create the first stage by bootstrapping a basic debian system
.IP \fBlh_chroot\fP(1) 4
create the second stage by customizing the chroot
.IP \fBlh_binary\fP(1) 4
create the third stage by generating a binary image
.IP \fBlh_source\fP(1) 4
create the optional fourth stage by generating a source image
.IP \fBlh_clean\fP(1) 4
clean up system build directories
.SS "Ancillary Commands"
.IP \fBlh\fP(1) 4
generic live\-helper wrapper
.IP \fBlh_build\fP(1) 4
alias for all stages
.IP \fBlh_local\fP(1) 4
helper for using a local live\-helper
.IP \fBlh_testroot\fP(1) 4
.\" FIXME
ensure that a system is built as root

.SH "LOW\-LEVEL COMMANDS (PLUMBING)"
.\" FIXME
The actual work of live\-helper is implemented in the low\-level commands,
called plumbing. They are not supposed to be used by end users, they should
stick with porcelains as they ensure that all the different plumbing
commands are executed in the right order. However, if you intend to reuse
live\-helper commands in your own scripts, then the plumbings might be of
interest for you.
.PP
Note that the interface (set of options and the semantics) to these
low\-level commands are meant to be a lot more stable than Porcelain level
commands. The interface to Porcelain commands on the other hand are subject
to change in order to improve the end user experience.
.SS "Bootstrap commands"
.IP \fBlh_bootstrap_cache\fP(1) 4
cache bootstrap stage
.IP \fBlh_bootstrap_cdebootstrap\fP(1) 4
bootstrap a Debian system with cdebootstrap(1)
.IP \fBlh_bootstrap_copy\fP(1) 4
bootstrap by copying the host system
.IP \fBlh_bootstrap_debootstrap\fP(1) 4
bootstrap a Debian system with debootstrap(8)
.SS "Chroot commands"
.IP \fBlh_chroot_apt\fP(1) 4
manage /etc/apt/apt.conf
.IP \fBlh_chroot_cache\fP(1) 4
cache chroot stage
.IP \fBlh_chroot_debianchroot\fP(1) 4
manage /etc/debian_chroot
.IP \fBlh_chroot_devpts\fP(1) 4
mount /dev/pts
.IP \fBlh_chroot_dpkg\fP(1) 4
manage /sbin/dpkg
.IP \fBlh_chroot_hacks\fP(1) 4
execute hacks in chroot
.IP \fBlh_chroot_hooks\fP(1) 4
execute hooks in chroot
.IP \fBlh_chroot_hostname\fP(1) 4
manage /bin/hostname
.IP \fBlh_chroot_hosts\fP(1) 4
manage /etc/hosts
.IP \fBlh_chroot_install\-packages\fP(1) 4
install queued packages into chroot
.IP \fBlh_chroot_interactive\fP(1) 4
make build interactive
.IP \fBlh_chroot_linux\-image\fP(1) 4
manage /etc/kernel\-img.conf
.IP \fBlh_chroot_local\-hooks\fP(1) 4
execute local hooks in chroot
.IP \fBlh_chroot_local\-includes\fP(1) 4
copy local files into chroot
.IP \fBlh_chroot_localization\fP(1) 4
install localization packages into chroot
.IP \fBlh_chroot_local\-packages\fP(1) 4
queue install of local packages into chroot
.IP \fBlh_chroot_local\-patches\fP(1) 4
apply local patches against chroot
.IP \fBlh_chroot_local\-preseed\fP(1) 4
use debconf local preseeding file
.IP \fBlh_chroot_packages\fP(1) 4
queue install of packages into chroot
.IP \fBlh_chroot_packageslists\fP(1) 4
queue install of packages lists into chroot
.IP \fBlh_chroot_preseed\fP(1) 4
use debconf preseeding file
.IP \fBlh_chroot_proc\fP(1) 4
mount /proc
.IP \fBlh_chroot_resolv\fP(1) 4
manage /etc/resolv.conf
.IP \fBlh_chroot_selinuxfs\fP(1) 4
mount /selinux
.IP \fBlh_chroot_sources\fP(1) 4
manage /etc/apt/sources.list
.IP \fBlh_chroot_symlinks\fP(1) 4
convert symlinks
.IP \fBlh_chroot_sysfs\fP(1) 4
mount /sys
.IP \fBlh_chroot_sysvinit\fP(1) 4
configure sysvinit
.IP \fBlh_chroot_sysv\-rc\fP(1) 4
manage /usr/sbin/policy\-rc.d
.IP \fBlh_chroot_tasks\fP(1) 4
install tasks into chroot
.SS "Binary commands"
.IP \fBlh_binary_chroot\fP(1) 4
copy chroot into chroot
.IP \fBlh_binary_debian\-installer\fP(1) 4
install debian\-installer into binary
.IP \fBlh_binary_disk\fP(1) 4
install disk information into binary
.IP \fBlh_binary_encryption\fP(1) 4
encrypts rootfs
.IP \fBlh_binary_grub\fP(1) 4
installs grub into binary
.IP \fBlh_binary_grub2\fP(1) 4
installs grub2 into binary
.IP \fBlh_binary_includes\fP(1) 4
copy files into binary
.IP \fBlh_binary_iso\fP(1) 4
build iso binary image
.IP \fBlh_binary_linux\-image\fP(1) 4
install linux\-image into binary
.IP \fBlh_binary_local\-hooks\fP(1) 4
execute local hooks in binary
.IP \fBlh_binary_local\-includes\fP(1) 4
copy files into binary
.IP \fBlh_binary_local\-packageslists\fP(1) 4
install local packages lists into binary
.IP \fBlh_binary_manifest\fP(1) 4
create manifest
.IP \fBlh_binary_checksums\fP(1) 4
create binary checksums (md5, sha1, and/or sha256)
.IP \fBlh_binary_memtest\fP(1) 4
installs a memtest into binary
.IP \fBlh_binary_net\fP(1) 4
build netboot binary image
.IP \fBlh_binary_rootfs\fP(1) 4
build rootfs image
.IP \fBlh_binary_silo\fP(1) 4
installs silo into binary
.IP \fBlh_binary_syslinux\fP(1) 4
installs syslinux into binary
.IP \fBlh_binary_tar\fP(1) 4
build harddisk binary image
.IP \fBlh_binary_usb\fP(1) 4
build binary usb\-hdd image
.IP \fBlh_binary_virtual\-hdd\fP(1) 4
build binary virtual\-hdd image
.IP \fBlh_binary_win32\-loader\fP(1) 4
installs win32\-loader into binary
.IP \fBlh_binary_yaboot\fP(1) 4
installs yaboot into binary
.SS "Source commands"
.IP \fBlh_source_debian\fP(1) 4
download sources
.IP \fBlh_source_debian\-live\fP(1) 4
copy debian\-live config into source
.IP \fBlh_source_disk\fP(1) 4
install disk information into source
.IP \fBlh_source_iso\fP(1) 4
build iso source image
.IP \fBlh_source_checksums\fP(1) 4
create source checksums (md5, sha1, and/or sha256)
.IP \fBlh_source_net\fP(1) 4
build source net image
.IP \fBlh_source_tar\fP(1) 4
build source tarball
.IP \fBlh_source_usb\fP(1) 4
build source usb\-hdd image
.IP \fBlh_source_virtual\-hdd\fP(1) 4
.\" FIXME
build source virtual\-hdd image

.SH "CONFIG FILES"
.\" FIXME
Many live\-helper commands make use of files in the \fIconfig/\fP directory to
control what they do. Besides the common \fIconfig/common\fP, which is used by
all live\-helper commands, some additional files can be used to configure the
behavior of specific live\-helper commands. These files are typically named
config/stage or config/stage_helper (where "stage" of course, is replaced
with the name of the stage that they belong to, and "helper" with the name
of the helper).
.PP
For example, lh_bootstrap_debootstrap uses files named config/bootstrap and
config/bootstrap_debootstrap to read the options it will use. See the man
pages of individual commands for details about the names and formats of the
files they use. Generally, these files contain variables with values
assigned, one variable per line. Some programs in live\-helper use pairs of
values or slightly more complicated variable assignments.
.PP
Note that live\-helper will respect environment variables which are present
in the context of the shell it is running. If variables can be read from
config files, then they override environment variables, and if command line
options are used, they override values from config files. If no value for a
given variable can be found and thus is unset, live\-helper will
automatically set it to the default value.
.PP
In some rare cases, you may want to have different versions of these files
for different architectures or distributions. If files named
config/stage.arch or config/stage_helper.arch, and config/stage.dist or
config/stage_helper.dist exist, where "arch" is the same as the output of
"dpkg \-\-print\-architecture" and "dist" is the same as the codename of the
target distribution, then they will be used in preference to other, more
general files.
.PP
.\" FIXME
All config files are shell scripts which are sourced by a live\-helper
program. That means they have to follow the normal shell syntax. You can
also put comments in these files; lines beginning with "#" are ignored.

.SH DATEIEN
.\" FIXME
.IP \fBn/a\fP 4

.\" FIXME
.SH "SIEHE AUCH"
\fIlive\-initramfs\fP(7)
.PP
Dieses Programm ist Teil von live\-helper.

.SH HOMEPAGE
Weitere Informationen Ã¼ber live\-helper und das Debian Live Projekt kÃ¶nnen
auf der Homepage unter <\fIhttp://live.debian.net/\fP> und im Handbuch
unter <\fIhttp://live.debian.net/manual/\fP> gefunden werden.

.SH FEHLER
Fehler kÃ¶nnen durch Einreichen eines Fehlerberichtes fÃ¼r das live\-helper
Paket im Debian Bug Tracking System unter
<\fIhttp://bugs.debian.org/\fP> oder durch Senden einer E\-Mail an die
Debian Live Mailing Liste unter <\fIdebian\-live@lists.debian.org\fP>
(englischsprachig) mitgeteilt werden.

.SH AUTOR
live\-helper wurde von Daniel Baumann <\fIdaniel@debian.org\fP> fÃ¼r das
Debian Projekt geschrieben.
